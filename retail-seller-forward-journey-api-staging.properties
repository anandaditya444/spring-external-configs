spring.kafka.servers=mall-staging-kafka-v1-1-0-broker-0.paytm.com:9092,mall-staging-kafka-v1-1-0-broker-1.paytm.com:9092,mall-staging-kafka-v1-1-0-broker-2.paytm.com:9092
spring.application.name=retail-seller-forward-journey-api
management.endpoints.web.base-path=/actuator
management.security.enabled=false
management.health.defaults.enabled=true
spring.cache.redis.host=10.61.12.50
spring.cache.redis.port=6379
spring.cache.redis.password=
# Retail PaytmDB MongoDB Configs
spring.data.mongodb.host=10.61.8.19
spring.data.mongodb.port=27017
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.username=app
spring.data.mongodb.password=one97897abc123
spring.data.mongodb.database=PaytmDB
#slave datasource
spring.datasource.paytm-ondc-slave.jdbc-url=jdbc:mysql://sawslmbstagdb02.paytm.internal:3306/paytm_ondc?useSSL=false&zeroDateTimeBehavior=convertToNull
spring.datasource.paytm-ondc-slave.username=mall_stage
spring.datasource.paytm-ondc-slave.password=Stg#M@ll#97#One(
spring.datasource.paytm-ondc-slave.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.paytm-ondc-slave.testOnBorrow=true
spring.datasource.paytm-ondc-slave.validationInterval=10000
spring.datasource.paytm-ondc-slave.testWhileIdle=true
spring.datasource.paytm-ondc-slave.timeBetweenEvictionRunsMillis=3600000
spring.datasource.paytm-ondc-slave.validationQuery=SELECT 1
# Mysql configuration (Core Module)
spring.jpa.database=MYSQL
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
# Select
kafka.select.topic.name=ondc-retail-seller-on-select-st
# Status
kafka.topics.status=ondc-retail-seller-on-status-st
#Confirm
kafka.confirm.topic.name=ondc-retail-seller-on-confirm-st
#Init
kafka.init.topic.name=ondc-retail-seller-on-init-st

spring.config.import=configserver:

#spring.cloud.config.refreshInterval: 30s
server.port=6060
